{
  "version": 3,
  "sources": [
    "Simple.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "model",
    "Abstract",
    "construct",
    "apiCollection",
    "columns",
    "putField",
    "_apiCollection",
    "_putField",
    "_columns",
    "columnIds",
    "columnNames",
    "forEach",
    "column",
    "push",
    "field",
    "name",
    "setColumns",
    "_sortColumnIndex",
    "_sortAscending",
    "_dataLoading",
    "_rowCount",
    "members",
    "_data",
    "_sortIsAscending",
    "_loadData",
    "then",
    "api",
    "getAll",
    "response",
    "data",
    "body",
    "rowsLength",
    "length",
    "Number",
    "changedData",
    "firstRow",
    "lastRow",
    "firstColumn",
    "lastColumn",
    "getColumnCount",
    "fireDataEvent",
    "bind",
    "getRowCount",
    "getRowData",
    "rowIndex",
    "isColumnEditable",
    "columnIndex",
    "editable",
    "isColumnSortable",
    "sortable",
    "sortByColumn",
    "ascending",
    "mapped",
    "map",
    "el",
    "i",
    "index",
    "value",
    "getValue",
    "sort",
    "a",
    "b",
    "result",
    "reverse",
    "fireEvent",
    "getSortColumnIndex",
    "isSortAscending",
    "rowData",
    "columnId",
    "getColumnId",
    "lang",
    "Type",
    "isArray",
    "ccId",
    "setValue",
    "columnData",
    "columnIdLength",
    "save",
    "qxc",
    "restful",
    "widget",
    "Simple"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,KAAGC,KAAH,CAASC,MAAT,CAAgB,uCAAhB,EAAyD;AACvDC,YAAQN,GAAGO,EAAH,CAAMC,KAAN,CAAYC,KAAZ,CAAkBC,QAD6B;;AAGvD;;;;;;;;;;;;AAYAC,eAAW,mBAASC,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2C;AACpD;;AAEA,WAAKC,cAAL,GAAsBH,aAAtB;AACA,WAAKI,SAAL,GAAiBF,QAAjB;;AAEA,WAAKG,QAAL,GAAgBJ,OAAhB;;AAEA,UAAIK,YAAY,EAAhB;AACA,UAAIC,cAAc,EAAlB;;AAEAN,cAAQO,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAC/BH,kBAAUI,IAAV,CAAeD,OAAOE,KAAtB;AACAJ,oBAAYG,IAAZ,CAAiBD,OAAOG,IAAxB;AACD,OAHD;;AAKA,WAAKC,UAAL,CAAgBN,WAAhB,EAA6BD,SAA7B;;AAEA,WAAKQ,gBAAL,GAAwB,CAAC,CAAzB;AACA,WAAKC,cAAL,GAAsB,IAAtB;;AAEA,WAAKC,YAAL,GAAoB,KAApB;AACA,WAAKC,SAAL,GAAiB,CAAC,CAAlB;AACD,KAtCsD;;AAwCvDC,aAAS;AACP;AACAf,sBAAgB,IAFT;AAGPE,gBAAU,IAHH;AAIPD,iBAAW,IAJJ;;AAMP;AACAe,aAAO,IAPA;AAQPH,oBAAc,IARP;AASPC,iBAAW,IATJ;;AAWP;AACAH,wBAAkB,IAZX;AAaPM,wBAAkB,IAbX;;AAePC,iBAAW,qBAAW;AACpB,aAAKF,KAAL,GAAa,IAAb;AACA,aAAKH,YAAL,GAAoB,IAApB;AACA,aAAKb,cAAL,CAAoBmB,IAApB,CAAyB,UAASC,GAAT,EAAc;AACrCA,cAAIC,MAAJ,GAAaF,IAAb,CAAkB,UAASG,QAAT,EAAmB;AACnC,gBAAIC,OAAOD,SAASE,IAAT,EAAX;;AAEA,iBAAKR,KAAL,GAAaO,IAAb;AACA,gBAAIE,aAAaF,KAAKG,MAAtB;AACA,iBAAKZ,SAAL,GAAiBa,OAAOF,UAAP,CAAjB;AACA,iBAAKZ,YAAL,GAAoB,KAApB;;AAEA,gBAAIe,cAAc;AAChBC,wBAAU,CADM;AAEhBC,uBAASL,aAAa,CAFN;AAGhBM,2BAAa,CAHG;AAIhBC,0BAAY,KAAKC,cAAL,KAAwB;AAJpB,aAAlB;AAMA,iBAAKC,aAAL,CAAmB,aAAnB,EAAkCN,WAAlC;AACD,WAfiB,CAehBO,IAfgB,CAeX,IAfW,CAAlB;AAgBD,SAjBwB,CAiBvBA,IAjBuB,CAiBlB,IAjBkB,CAAzB;AAkBD,OApCM;;AAsCPC,mBAAa,uBAAW;AACtB,YAAI,CAAC,KAAKpB,KAAV,EAAiB;AACf,cAAI,CAAC,KAAKH,YAAV,EAAwB;AACtB,iBAAKK,SAAL;AACD;AACD,iBAAO,IAAP;AACD;;AAED,eAAO,KAAKJ,SAAZ;AACD,OA/CM;;AAiDPuB,kBAAY,oBAASC,QAAT,EAAmB;AAC7B,YAAI,CAAC,KAAKtB,KAAV,EAAiB;AACf,cAAI,CAAC,KAAKH,YAAV,EAAwB;AACtB,iBAAKK,SAAL;AACD;;AAED,iBAAO,IAAP;AACD;;AAED,eAAO,KAAKF,KAAL,CAAWsB,QAAX,EAAqBf,IAArB,EAAP;AACD,OA3DM;;AA6DPgB,wBAAkB,0BAASC,WAAT,EAAsB;AACtC,eAAO,KAAKtC,QAAL,CAAcsC,WAAd,EAA2BC,QAAlC;AACD,OA/DM;;AAiEPC,wBAAkB,0BAASF,WAAT,EAAsB;AACtC,eAAO,KAAKtC,QAAL,CAAcsC,WAAd,EAA2BG,QAAlC;AACD,OAnEM;;AAqEPC,oBAAc,sBAASJ,WAAT,EAAsBK,SAAtB,EAAiC;AAC7C,YAAI,CAAC,KAAK7B,KAAV,EAAiB;AACf;AACD;;AAED,YAAI,KAAKL,gBAAL,KAA0B6B,WAA1B,IACA,KAAK5B,cAAL,KAAwBiC,SAD5B,EACuC;AACrC;AACD;;AAED,aAAKlC,gBAAL,GAAwB6B,WAAxB;AACA,aAAK5B,cAAL,GAAsBiC,SAAtB;;AAEA;AACA,YAAIC,SAAS,KAAK9B,KAAL,CAAW+B,GAAX,CAAe,UAASC,EAAT,EAAaC,CAAb,EAAgB;AAC1C,iBAAO,EAACC,OAAOD,CAAR,EAAWE,OAAO,KAAKC,QAAL,CAAcZ,WAAd,EAA2BS,CAA3B,CAAlB,EAAP;AACD,SAFY,CAAb;;AAIA;AACAH,eAAOO,IAAP,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzB,iBAAO,CAAC5B,OAAO2B,EAAEH,KAAF,GAAUI,EAAEJ,KAAnB,CAAD,IAA8B,CAACxB,OAAO2B,EAAEH,KAAF,KAAYI,EAAEJ,KAArB,CAAD,GAA+B,CAApE;AACD,SAFD;;AAIA;AACA,YAAIK,SAASV,OAAOC,GAAP,CAAW,UAASC,EAAT,EAAa;AACnC,iBAAO,KAAKhC,KAAL,CAAWgC,GAAGE,KAAd,CAAP;AACD,SAFY,CAAb;;AAIA;AACA,YAAI,CAACL,SAAL,EAAgB;AACdW,iBAAOC,OAAP;AACD;;AAED;AACA,aAAKzC,KAAL,GAAawC,MAAb;;AAEA,aAAKtB,aAAL,CAAmB,QAAnB,EAA6B,EAA7B;;AAEA;AACA,aAAKwB,SAAL,CAAe,iBAAf;AACD,OA7GM;;AA+GPC,0BAAoB,8BAAW;AAC7B,eAAO,KAAKhD,gBAAZ;AACD,OAjHM;;AAmHPiD,uBAAiB,2BAAW;AAC1B,eAAO,KAAKhD,cAAZ;AACD,OArHM;;AAuHP;;;;AAIAwC,gBAAU,kBAASZ,WAAT,EAAsBF,QAAtB,EAAgC;AACxC,YAAIuB,UAAU,KAAKxB,UAAL,CAAgBC,QAAhB,CAAd;;AAEA,YAAIuB,YAAY,IAAhB,EAAsB;AACpB,iBAAO,IAAP;AACD;;AAED,YAAIC,WAAW,KAAKC,WAAL,CAAiBvB,WAAjB,CAAf;AACA,YAAIvD,GAAG+E,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBJ,QAArB,CAAJ,EAAoC;AAClCA,mBAASzD,OAAT,CAAiB,UAAS8D,IAAT,EAAe;AAC9BN,sBAAUA,QAAQM,IAAR,CAAV;AACD,WAFD;AAGA,iBAAON,OAAP;AACD;;AAED,eAAOA,QAAQC,QAAR,CAAP;AACD,OA3IM;;AA6IP;;;;;AAKAM,gBAAU,kBAAS5B,WAAT,EAAsBF,QAAtB,EAAgCa,KAAhC,EAAuC;AAC/C,YAAIU,UAAU,KAAKxB,UAAL,CAAgBC,QAAhB,CAAd;;AAEA,YAAIwB,WAAW,KAAKC,WAAL,CAAiBvB,WAAjB,CAAf;AACA,YAAIvD,GAAG+E,IAAH,CAAQC,IAAR,CAAaC,OAAb,CAAqBJ,QAArB,CAAJ,EAAoC;AAClC,cAAIO,aAAaR,OAAjB;AACA,cAAIS,iBAAiBR,SAASpC,MAAT,GAAkB,CAAvC;AACA,cAAIuB,IAAI,CAAR;AACA,eAAKA,IAAI,CAAT,EAAYA,IAAIqB,cAAhB,EAAgCrB,GAAhC,EAAqC;AACnCoB,yBAAaA,WAAWP,SAASb,CAAT,CAAX,CAAb;AACD;AACDoB,qBAAWpB,IAAI,CAAf,IAAoBE,KAApB;AACD,SARD,MAQO;AACLU,kBAAQC,QAAR,IAAoBX,KAApB;AACD;;AAED,aAAKnC,KAAL,CAAWsB,QAAX,EAAqBiC,IAArB,GAA4BpC,IAA5B,CAAiC,IAAjC,EAAuChB,IAAvC,CAA4C,YAAW;AACrD,cAAIS,cAAc;AAChBC,sBAAUS,QADM;AAEhBR,qBAASQ,QAFO;AAGhBP,yBAAaS,WAHG;AAIhBR,wBAAYQ;AAJI,WAAlB;AAMA,eAAKN,aAAL,CAAmB,aAAnB,EAAkCN,WAAlC;AACD,SARD;AASD;AA3KM;AAxC8C,GAAzD,C;AAAA4C,MAAIC,OAAJ,CAAYC,MAAZ,CAAmBjF,KAAnB,CAAyBC,KAAzB,CAA+BiF,MAA/B,CAAsCvF,aAAtC,GAAsDA,aAAtD",
  "file": "Simple.js",
  "sourcesContent": [
    "qx.Class.define(\"qxc.restful.widget.table.model.Simple\", {\n  extend: qx.ui.table.model.Abstract,\n\n  /**\n   *\n   * @param apiCollection {Promise} A promise returning an restful.js Collection.\n   * @param columns {Array} Array of columns.\n   * [\n   *  {field: \"name\", name: \"Name\", sortable: true, editable: false},\n   *  {field: \"username\", name: \"Username\", sortable: true, editable: false},\n   *  {field: \"email\", name: \"E-Mail\", sortable: true, editable: false},\n   *  {field: [\"company\", \"name\"], name: \"Company\", sortable: true, editable: false}\n   * ]\n   * @param putField {String} Field name for put urls.\n   */\n  construct: function(apiCollection, columns, putField) {\n    this.base(arguments);\n\n    this._apiCollection = apiCollection;\n    this._putField = putField;\n\n    this._columns = columns;\n\n    var columnIds = [];\n    var columnNames = [];\n\n    columns.forEach(function(column) {\n      columnIds.push(column.field);\n      columnNames.push(column.name);\n    });\n\n    this.setColumns(columnNames, columnIds);\n\n    this._sortColumnIndex = -1;\n    this._sortAscending = true;\n\n    this._dataLoading = false;\n    this._rowCount = -1;\n  },\n\n  members: {\n    /* Construct params */\n    _apiCollection: null,\n    _columns: null,\n    _putField: null,\n\n    /* _loadData result/loading indicator */\n    _data: null,\n    _dataLoading: null,\n    _rowCount: null,\n\n    /* Sorting */\n    _sortColumnIndex: null,\n    _sortIsAscending: null,\n\n    _loadData: function() {\n      this._data = null;\n      this._dataLoading = true;\n      this._apiCollection.then(function(api) {\n        api.getAll().then(function(response) {\n          var data = response.body();\n\n          this._data = data;\n          var rowsLength = data.length;\n          this._rowCount = Number(rowsLength);\n          this._dataLoading = false;\n\n          var changedData = {\n            firstRow: 0,\n            lastRow: rowsLength - 1,\n            firstColumn: 0,\n            lastColumn: this.getColumnCount() - 1\n          };\n          this.fireDataEvent(\"dataChanged\", changedData);\n        }.bind(this));\n      }.bind(this));\n    },\n\n    getRowCount: function() {\n      if (!this._data) {\n        if (!this._dataLoading) {\n          this._loadData();\n        }\n        return null;\n      }\n\n      return this._rowCount;\n    },\n\n    getRowData: function(rowIndex) {\n      if (!this._data) {\n        if (!this._dataLoading) {\n          this._loadData();\n        }\n\n        return null;\n      }\n\n      return this._data[rowIndex].data();\n    },\n\n    isColumnEditable: function(columnIndex) {\n      return this._columns[columnIndex].editable;\n    },\n\n    isColumnSortable: function(columnIndex) {\n      return this._columns[columnIndex].sortable;\n    },\n\n    sortByColumn: function(columnIndex, ascending) {\n      if (!this._data) {\n        return;\n      }\n\n      if (this._sortColumnIndex === columnIndex &&\n          this._sortAscending === ascending) {\n        return;\n      }\n\n      this._sortColumnIndex = columnIndex;\n      this._sortAscending = ascending;\n\n      // temporary array holds objects with position and sort-value\n      var mapped = this._data.map(function(el, i) {\n        return {index: i, value: this.getValue(columnIndex, i)};\n      });\n\n      // sorting the mapped array containing the reduced values\n      mapped.sort(function(a, b) {\n        return +Number(a.value > b.value) || +Number(a.value === b.value) - 1;\n      });\n\n      // container for the resulting order\n      var result = mapped.map(function(el) {\n        return this._data[el.index];\n      });\n\n      // Sort Descending?\n      if (!ascending) {\n        result.reverse();\n      }\n\n      // Update this._data with the result\n      this._data = result;\n\n      this.fireDataEvent(\"sorted\", {});\n\n      // Inform the listeners\n      this.fireEvent(\"metaDataChanged\");\n    },\n\n    getSortColumnIndex: function() {\n      return this._sortColumnIndex;\n    },\n\n    isSortAscending: function() {\n      return this._sortAscending;\n    },\n\n    /**\n     * @param columnIndex {Integer}\n     * @param rowIndex {Integer}\n     */\n    getValue: function(columnIndex, rowIndex) {\n      var rowData = this.getRowData(rowIndex);\n\n      if (rowData === null) {\n        return null;\n      }\n\n      var columnId = this.getColumnId(columnIndex);\n      if (qx.lang.Type.isArray(columnId)) {\n        columnId.forEach(function(ccId) {\n          rowData = rowData[ccId];\n        });\n        return rowData;\n      }\n\n      return rowData[columnId];\n    },\n\n    /**\n     * @param columnIndex {Integer}\n     * @param rowIndex {Integer}\n     * @param value {var} The new value.\n     */\n    setValue: function(columnIndex, rowIndex, value) {\n      var rowData = this.getRowData(rowIndex);\n\n      var columnId = this.getColumnId(columnIndex);\n      if (qx.lang.Type.isArray(columnId)) {\n        var columnData = rowData;\n        var columnIdLength = columnId.length - 1;\n        var i = 0;\n        for (i = 0; i < columnIdLength; i++) {\n          columnData = columnData[columnId[i]];\n        }\n        columnData[i + 1] = value;\n      } else {\n        rowData[columnId] = value;\n      }\n\n      this._data[rowIndex].save().bind(this).then(function() {\n        var changedData = {\n          firstRow: rowIndex,\n          lastRow: rowIndex,\n          firstColumn: columnIndex,\n          lastColumn: columnIndex\n        };\n        this.fireDataEvent(\"dataChanged\", changedData);\n      });\n    }\n  }\n});\n"
  ]
}