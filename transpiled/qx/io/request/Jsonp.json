{
  "className": "qx.io.request.Jsonp",
  "packageName": "qx.io.request",
  "name": "Jsonp",
  "superClass": "qx.io.request.AbstractRequest",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 72,
        "column": 0
      },
      "end": {
        "line": 209,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nTristan Koch (tristankoch)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Query JSONP services using the script element. Requests may be cross-origin.\n\nConfiguration of the request is done with properties. Events are fired for\nvarious states in the life cycle of a request, such as \"success\". Request\ndata is transparently processed.\n\nFor an introduction to JSONP, please refer to\n<a href=\"http://ajaxian.com/archives/jsonp-json-with-padding\">Ajaxian.com</a>.\n\nHere is how to request a JSON file from a REST service and listen to\nthe \"success\" event:\n\n<pre class=\"javascript\">\nvar req = new qx.io.request.Jsonp();\nreq.setUrl(\"http://feeds.delicious.com/v2/json/popular\");\n\n// Some services have a fixed callback name\n// req.setCallbackName(\"callback\");\n\nreq.addListener(\"success\", function(e) {\nvar req = e.getTarget();\n\n// HTTP status code indicating success, e.g. 200\nreq.getStatus();\n\n// \"success\"\nreq.getPhase();\n\n// JSON response\nreq.getResponse();\n}, this);\n\n// Send request\nreq.send();\n</pre>\n\nSome noteable features:\n\n* Abstraction of low-level request\n* Convenient setup using properties\n* Fine-grained events\n* Symbolic phases\n* Transparent processing of request data\n* Stream-lined authentication\n* Flexible callback handling\n* Cross-origin requests\n\nIn order to debug requests, set the environment flag\n<code>qx.debug.io</code>.\n\nInternally uses {@link qx.bom.request.Jsonp}."
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "cache": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether to allow request to be answered from cache.\n\nAllowed values:\n\n* <code>true</code>: Allow caching (Default)\n* <code>false</code>: Prohibit caching. Appends nocache parameter to URL."
          }
        ]
      },
      "name": "cache",
      "propertyType": "new",
      "check": "Boolean",
      "defaultValue": true
    }
  },
  "members": {
    "_createTransport": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nCONFIGURE TRANSPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Create JSONP transport."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.request.Jsonp} Transport.",
            "type": "qx.bom.request.Jsonp",
            "desc": " Transport."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.io.request.AbstractRequest",
      "appearsIn": [
        "qx.io.request.AbstractRequest"
      ]
    },
    "_getConfiguredUrl": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 168,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get configured URL.\n\nAppend request data to URL. Also append random string\nto URL if required by value of {@link #cache}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The configured URL.",
            "type": "String",
            "desc": " The configured URL."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.io.request.AbstractRequest",
      "appearsIn": [
        "qx.io.request.AbstractRequest"
      ]
    },
    "_getParsedResponse": {
      "location": {
        "start": {
          "line": 177,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the transportâ€™s responseJson property.\n\nSee {@link qx.bom.request.Jsonp}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} The parsed response of the request.",
            "type": "Object",
            "desc": " The parsed response of the request."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.io.request.AbstractRequest",
      "appearsIn": [
        "qx.io.request.AbstractRequest"
      ]
    },
    "setCallbackParam": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nCALLBACK MANAGEMENT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Set callback parameter.\n\nSee {@link qx.bom.request.Jsonp#setCallbackParam}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "param {String} Name of the callback parameter.",
            "paramName": "param",
            "description": " Name of the callback parameter.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setCallbackName": {
      "location": {
        "start": {
          "line": 205,
          "column": 4
        },
        "end": {
          "line": 207,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Set callback name.\n\nSee {@link qx.bom.request.Jsonp#setCallbackName}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the callback function.",
            "paramName": "name",
            "description": " Name of the callback function.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getUrl": {
      "type": "function",
      "name": "getUrl",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setUrl": {
      "type": "function",
      "name": "setUrl",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetUrl": {
      "type": "function",
      "name": "resetUrl",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTimeout": {
      "type": "function",
      "name": "getTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTimeout": {
      "type": "function",
      "name": "setTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTimeout": {
      "type": "function",
      "name": "resetTimeout",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRequestData": {
      "type": "function",
      "name": "getRequestData",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRequestData": {
      "type": "function",
      "name": "setRequestData",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRequestData": {
      "type": "function",
      "name": "resetRequestData",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getAuthentication": {
      "type": "function",
      "name": "getAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.request.authentication.IAuthentication",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setAuthentication": {
      "type": "function",
      "name": "setAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.request.authentication.IAuthentication",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetAuthentication": {
      "type": "function",
      "name": "resetAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getCache": {
      "type": "function",
      "name": "getCache",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isCache": {
      "type": "function",
      "name": "isCache",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setCache": {
      "type": "function",
      "name": "setCache",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetCache": {
      "type": "function",
      "name": "resetCache",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "abstract": true,
  "descendants": []
}